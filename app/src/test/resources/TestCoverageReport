/*

Отчет о тестовом покрытии:

С помощью Espresso реализовано тестирование следующих сценариев:
1. Открытие приложение
2. Отображение главной страницы
3. Открытие списка покемонов
4. Переход в карточку покемона
5. Взаимодействие с объектом speedDial (раскрывающееся меню)
6. Открытие виджета поиска
7. Просмотр списка поколений покемонов

В тестовом наборе есть один тест, который падает целенаправленно (тест попытки
открытия новости на экране списка покемонов).

С помощью UiAutomator реализовано тестирование следующих сценариев:
1. Открытие приложение
2. Отображение главной страницы
3. Открытие карточки новости
4. Открытие списка покемонов
5. Переход в карточку покемона
6. Взаимодействие с объектом speedDial (раскрывающееся меню)
7. Открытие виджета поиска
8. Просмотр списка поколений покемонов

В тестовом наборе есть один тест, который падает целенаправленно (тест попытки
открытия карточки покемона Пикачу).

Сортировка и поиск покемонов, а также другие экраны не реализованы в самом приложении,
поэтому не покрываются тестами

Также реализован статический анализ кода с помощью утилиты detekt -
после выполнения gradle-task "detektBaseline" отчет генерируется
в файле по адресу "src/test/resources/detektReport.xml"

Наработки unit-тестов с использованием моков базы данных находятся в файле "UnitTest.kt"

*/